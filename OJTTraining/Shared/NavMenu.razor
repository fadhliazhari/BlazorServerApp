@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">OJTTraining</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <AuthorizeView>
            <li class="nav-item px-3">
                <div class="dropdown-divider"></div>
            </li>
        </AuthorizeView>
        <AuthorizeView>
            <li class="nav-item dropdown px-3">
                <NavLink id="navbarDropdown" class="nav-link" @onmousedown="ToggleHospNavMenu" onclick="event.stopPropagation()">
                    <span class="oi oi-medical-cross" aria-hidden="true"></span> Hospital
                    @if (expandHospitalNav)
                    {
                        <span class="oi oi-caret-bottom ml-auto" aria-hidden="true"></span>
                    }
                    else
                    {
                        <span class="oi oi-caret-right ml-auto" aria-hidden="true"></span>
                    }
                </NavLink>
                @if (expandHospitalNav)
                {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="patients">
                        <span class="oi oi-people" aria-hidden="true"></span> Patients
                    </NavLink>
                </li>
                @if (isInfra)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="rooms">
                            <span class="oi oi-home" aria-hidden="true"></span> Rooms
                        </NavLink>
                    </li>
                }
            }
                </li>
            </AuthorizeView>
        </ul>
    </div>

    @code {
        private bool collapseNavMenu = true;
        private bool expandHospitalNav = false;
        private bool isInfra = false;

        [CascadingParameter]
        private Task<AuthenticationState> authenticationStateTask { get; set; }

        private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

        protected override async Task OnInitializedAsync()
        {
            var user = (await authenticationStateTask).User;

            if (user.IsInRole("infra"))
            {
                isInfra = true;
            }
        }

        private void ToggleNavMenu()
        {
            collapseNavMenu = !collapseNavMenu;
        }

        private void ToggleHospNavMenu()
        {
            expandHospitalNav = !expandHospitalNav;
        }
    }
